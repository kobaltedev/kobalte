// tsup.config.ts
import { solidPlugin } from "esbuild-plugin-solid";
import { defineConfig } from "tsup";
function generateConfig(jsx) {
  return {
    target: "esnext",
    platform: "browser",
    format: "esm",
    clean: true,
    dts: !jsx,
    entry: ["src/index.tsx", "src/*/index.tsx", "src/primitives/*/index.ts"],
    outDir: "dist/",
    treeshake: { preset: "smallest" },
    replaceNodeEnv: true,
    esbuildOptions(options) {
      if (jsx) {
        options.jsx = "preserve";
      }
      options.chunkNames = "[name]/[hash]";
      options.drop = ["console", "debugger"];
    },
    outExtension() {
      return jsx ? { js: ".jsx" } : {};
    },
    // @ts-ignore
    esbuildPlugins: !jsx ? [solidPlugin({ solid: { generate: "dom" } })] : []
  };
}
var tsup_config_default = defineConfig([generateConfig(false), generateConfig(true)]);
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiL2hvbWUvamVyM20wMS9wcm9qZWN0cy9rb2JhbHRlZGV2L2tvYmFsdGUvcGFja2FnZXMvY29yZS90c3VwLmNvbmZpZy50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCIvaG9tZS9qZXIzbTAxL3Byb2plY3RzL2tvYmFsdGVkZXYva29iYWx0ZS9wYWNrYWdlcy9jb3JlXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9ob21lL2plcjNtMDEvcHJvamVjdHMva29iYWx0ZWRldi9rb2JhbHRlL3BhY2thZ2VzL2NvcmUvdHN1cC5jb25maWcudHNcIjsvLy8vIHRzdXAuY29uZmlnLnRzXG4vL2ltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gJ3RzdXAnXG4vL2ltcG9ydCAqIGFzIHByZXNldCBmcm9tICd0c3VwLXByZXNldC1zb2xpZCdcbi8vaW1wb3J0IHsgZ2xvYlN5bmMgfSBmcm9tIFwiZ2xvYlwiO1xuLy9cbi8vY29uc3QgcHJlc2V0X29wdGlvbnM6IHByZXNldC5QcmVzZXRPcHRpb25zID0ge1xuLy9cdC8vIGFycmF5IG9yIHNpbmdsZSBvYmplY3Rcbi8vXHRlbnRyaWVzOiBbXG4vL1x0XHQvLyBkZWZhdWx0IGVudHJ5IChpbmRleClcbi8vXHRcdHtcbi8vXHRcdFx0Ly8gZW50cmllcyB3aXRoICcudHN4JyBleHRlbnNpb24gd2lsbCBoYXZlIGBzb2xpZGAgZXhwb3J0IGNvbmRpdGlvbiBnZW5lcmF0ZWRcbi8vXHRcdFx0ZW50cnk6IFwic3JjL2luZGV4LnRzeFwiLFxuLy9cdFx0fVxuLy9cdF0sXG4vL1x0ZHJvcF9jb25zb2xlOiB0cnVlLFxuLy99XG4vL1xuLy9leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoY29uZmlnID0+IHtcbi8vXHRjb25zdCB3YXRjaGluZyA9ICEhY29uZmlnLndhdGNoO1xuLy9cbi8vXHRjb25zdCBjb21wb25lbnRJbmRleGVzID0gZ2xvYlN5bmMoJ3NyYy8qL2luZGV4LnRzeCcpO1xuLy9cbi8vXHQocHJlc2V0X29wdGlvbnMuZW50cmllcyBhcyBwcmVzZXQuRW50cnlPcHRpb25zW10pLnB1c2goLi4uY29tcG9uZW50SW5kZXhlcy5tYXAocyA9PiAoe1xuLy9cdFx0ZW50cnk6IHMsXG4vL1x0fSkpKTtcbi8vXG4vL1x0Y29uc3QgcGFyc2VkX2RhdGEgPSBwcmVzZXQucGFyc2VQcmVzZXRPcHRpb25zKHByZXNldF9vcHRpb25zLCB3YXRjaGluZyk7XG4vL1xuLy9cdGlmICghd2F0Y2hpbmcpIHtcbi8vXHRcdGNvbnN0IHBhY2thZ2VfZmllbGRzID0gcHJlc2V0LmdlbmVyYXRlUGFja2FnZUV4cG9ydHMocGFyc2VkX2RhdGEpO1xuLy9cbi8vXHRcdGNvbnNvbGUubG9nKGBcXG5wYWNrYWdlLmpzb246IFxcbiR7SlNPTi5zdHJpbmdpZnkocGFja2FnZV9maWVsZHMsIG51bGwsIDIpfVxcblxcbmApO1xuLy9cbi8vXHRcdC8qXG4vL1x0XHRcdHdpbGwgdXBkYXRlIC4vcGFja2FnZS5qc29uIHdpdGggdGhlIGNvcnJlY3QgZXhwb3J0IGZpZWxkc1xuLy9cdFx0Ki9cbi8vXHRcdHByZXNldC53cml0ZVBhY2thZ2VKc29uKHBhY2thZ2VfZmllbGRzKTtcbi8vXHR9XG4vL1xuLy9cdHJldHVybiBwcmVzZXQuZ2VuZXJhdGVUc3VwT3B0aW9ucyhwYXJzZWRfZGF0YSk7XG4vL30pXG5cbmltcG9ydCB7IHNvbGlkUGx1Z2luIH0gZnJvbSBcImVzYnVpbGQtcGx1Z2luLXNvbGlkXCI7XG4vKipcbiAqIEFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vY29ydnVkZXYvY29ydnUvYmxvYi9iMWYzNmRiMDk2ODY3YTg4ZWY1YjYyYmVjMWU0NmNjMGM4ZTA5MDg5L3BhY2thZ2VzL2NvcnZ1L3RzdXAuY29uZmlnLnRzXG4gKi9cbmltcG9ydCB7IHR5cGUgT3B0aW9ucywgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInRzdXBcIjtcblxuZnVuY3Rpb24gZ2VuZXJhdGVDb25maWcoanN4OiBib29sZWFuKTogT3B0aW9ucyB7XG5cdHJldHVybiB7XG5cdFx0dGFyZ2V0OiBcImVzbmV4dFwiLFxuXHRcdHBsYXRmb3JtOiBcImJyb3dzZXJcIixcblx0XHRmb3JtYXQ6IFwiZXNtXCIsXG5cdFx0Y2xlYW46IHRydWUsXG5cdFx0ZHRzOiAhanN4LFxuXHRcdGVudHJ5OiBbXCJzcmMvaW5kZXgudHN4XCIsIFwic3JjLyovaW5kZXgudHN4XCIsIFwic3JjL3ByaW1pdGl2ZXMvKi9pbmRleC50c1wiXSxcblx0XHRvdXREaXI6IFwiZGlzdC9cIixcblx0XHR0cmVlc2hha2U6IHsgcHJlc2V0OiBcInNtYWxsZXN0XCIgfSxcblx0XHRyZXBsYWNlTm9kZUVudjogdHJ1ZSxcblx0XHRlc2J1aWxkT3B0aW9ucyhvcHRpb25zKSB7XG5cdFx0XHRpZiAoanN4KSB7XG5cdFx0XHRcdG9wdGlvbnMuanN4ID0gXCJwcmVzZXJ2ZVwiO1xuXHRcdFx0fVxuXHRcdFx0b3B0aW9ucy5jaHVua05hbWVzID0gXCJbbmFtZV0vW2hhc2hdXCI7XG5cdFx0XHRvcHRpb25zLmRyb3AgPSBbXCJjb25zb2xlXCIsIFwiZGVidWdnZXJcIl07XG5cdFx0fSxcblx0XHRvdXRFeHRlbnNpb24oKSB7XG5cdFx0XHRyZXR1cm4ganN4ID8geyBqczogXCIuanN4XCIgfSA6IHt9O1xuXHRcdH0sXG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdGVzYnVpbGRQbHVnaW5zOiAhanN4ID8gW3NvbGlkUGx1Z2luKHsgc29saWQ6IHsgZ2VuZXJhdGU6IFwiZG9tXCIgfSB9KV0gOiBbXSxcblx0fTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKFtnZW5lcmF0ZUNvbmZpZyhmYWxzZSksIGdlbmVyYXRlQ29uZmlnKHRydWUpXSk7XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBMENBLFNBQVMsbUJBQW1CO0FBSTVCLFNBQXVCLG9CQUFvQjtBQUUzQyxTQUFTLGVBQWUsS0FBdUI7QUFDOUMsU0FBTztBQUFBLElBQ04sUUFBUTtBQUFBLElBQ1IsVUFBVTtBQUFBLElBQ1YsUUFBUTtBQUFBLElBQ1IsT0FBTztBQUFBLElBQ1AsS0FBSyxDQUFDO0FBQUEsSUFDTixPQUFPLENBQUMsaUJBQWlCLG1CQUFtQiwyQkFBMkI7QUFBQSxJQUN2RSxRQUFRO0FBQUEsSUFDUixXQUFXLEVBQUUsUUFBUSxXQUFXO0FBQUEsSUFDaEMsZ0JBQWdCO0FBQUEsSUFDaEIsZUFBZSxTQUFTO0FBQ3ZCLFVBQUksS0FBSztBQUNSLGdCQUFRLE1BQU07QUFBQSxNQUNmO0FBQ0EsY0FBUSxhQUFhO0FBQ3JCLGNBQVEsT0FBTyxDQUFDLFdBQVcsVUFBVTtBQUFBLElBQ3RDO0FBQUEsSUFDQSxlQUFlO0FBQ2QsYUFBTyxNQUFNLEVBQUUsSUFBSSxPQUFPLElBQUksQ0FBQztBQUFBLElBQ2hDO0FBQUE7QUFBQSxJQUVBLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsT0FBTyxFQUFFLFVBQVUsTUFBTSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFBQSxFQUN6RTtBQUNEO0FBRUEsSUFBTyxzQkFBUSxhQUFhLENBQUMsZUFBZSxLQUFLLEdBQUcsZUFBZSxJQUFJLENBQUMsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
